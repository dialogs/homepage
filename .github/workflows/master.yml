name: Master CI

on:
  push:
    branches:
      - 'master'

jobs:
  build-app:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@master
        with:
          node-version: '12.x'
      - name: Pipline notify started
        run: |
          BUILD_NUMBER=$(git rev-list --count HEAD)
          curl --header 'Content-Type: application/json' --request POST \
          --data "{\"text\": \"üëâüèæ Homepage build(master) *#$BUILD_NUMBER*: pipeline started.\"}" \
          ${{ secrets.DIALOG_WEBHOOK }}
      - name: Build
        env:
          EMAIL_USER: ${{secrets.EMAIL_USER}}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
          GHOST_ENDPOINT: ${{ secrets.GHOST_ENDPOINT }}
          GHOST_API_KEY: ${{ secrets.GHOST_API_KEY }}
          MAILCHIMP_KEY: ${{ secrets.MAILCHIMP_KEY }}
          MAILCHIMP_LIST_RU: ${{ secrets.MAILCHIMP_LIST_RU }}
          MAILCHIMP_LIST_EN: ${{ secrets.MAILCHIMP_LIST_EN }}
          GATSBY_GRAPHQL_IDE: playground
          DIALOG_WEBHOOK: ${{ secrets.DIALOG_WEBHOOK }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          SENTRY_DSN_PUBLIC: ${{ secrets.SENTRY_DSN_PUBLIC }}
        run: |
          npm ci
          npm run build
          BUILD_NUMBER=$(git rev-list --count HEAD)
          curl --header 'Content-Type: application/json' --request POST \
          --data "{\"text\": \"üëåüèæ Homepage build(master) *#$BUILD_NUMBER*: application build successful.\"}" \
          ${{ secrets.DIALOG_WEBHOOK }}
      - name: Upload app artifact
        uses: actions/upload-artifact@v1
        with:
          name: app
          path: public

      - name: Upload server artifact
        uses: actions/upload-artifact@v1
        with:
          name: server
          path: server

  version:
    needs: build-app
    if: github.actor != 'dialog-bot'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@master
        with:
          node-version: '12.x'
      - name: Configure git
        run: |
          git config user.name ${{ secrets.GITHUB_BOT_USERNAME }}
          git config user.email ${{ secrets.GITHUB_BOT_EMAIL }}
          git remote set-url origin https://${{ secrets.GITHUB_BOT_TOKEN }}@github.com/dialogs/homepage.git
      - name: Configure bot
        run: |
          sudo apt-get update
          sudo apt-get install gnupg2 -y
          echo "${{ secrets.GITHUB_BOT_GPG_KEY }}" > private.key
          gpg2 --allow-secret-key-import --import private.key
          git config --global gpg.program gpg2
          git config --global push.followTags true
      - name: Version bump
        run: |
          git checkout master
          npm version patch
          git push --follow-tags
      - name: (Exception step) Version bump
        if: failure()
        run: |
          BUILD_NUMBER=$(git rev-list --count HEAD)
          curl --header 'Content-Type: application/json' --request POST \
          --data "{\"text\": \"üëåüèæ Homepage(master) *#$BUILD_NUMBER* version bump failed: \"}" \
          ${{ secrets.DIALOG_WEBHOOK }}

  build-docker:
    needs: build-app
    if: github.actor == 'dialog-bot'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Download app artifact
        uses: actions/download-artifact@v1
        with:
          name: app
          path: public
      - name: Download server artifact
        uses: actions/download-artifact@v1
        with:
          name: server
          path: server
      - name: Build the Docker image
        env:
          DOCKER_IMAGE: docker.pkg.github.com/dialogs/homepage/homepage
          NODE_ENV: production
        run: |
          VERSION=$(node -p "require('./package.json').version")
          IMAGE_VERSION="${VERSION}"
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
          docker build -t $DOCKER_IMAGE:$IMAGE_VERSION .
          docker tag $DOCKER_IMAGE:$IMAGE_VERSION $DOCKER_IMAGE:latest
          docker push $DOCKER_IMAGE:$IMAGE_VERSION
      - name: Notify
        run: |
          BUILD_NUMBER=$(git rev-list --count HEAD)
          curl --header 'Content-Type: application/json' --request POST \
          --data "{\"text\": \"üëåüèæ Homepage build *#$BUILD_NUMBER*: docker image ready. \"}" \
          ${{ secrets.DIALOG_WEBHOOK }}
      - name: Deploy
        run: curl -X POST "https://${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_PASSWORD }}@jenkins.transmit.im/job/Web/job/landing-deploy-test/buildWithParameters?token=${{ secrets.JENKINS_TOKEN }}&app=prod&image=$DOCKER_IMAGE:$IMAGE_VERSION:latest"
      - name: Deploy notify
        if: success()
        run: |
          BUILD_NUMBER=$(git rev-list --count HEAD)
          curl --header 'Content-Type: application/json' --request POST \
          --data "{\"text\": \"üëåüèæ Homepage build(develop) *#$BUILD_NUMBER:* successfully deployed. \"}" \
          ${{ secrets.DIALOG_WEBHOOK }}
      - name: Exception
        if: failure()
        run: |
          BUILD_NUMBER=$(git rev-list --count HEAD)
          curl --header 'Content-Type: application/json' --request POST \
          --data "{\"text\": \"üñïüèæ Homepage build(master) *#$BUILD_NUMBER:* pipeline failed. [More info](https://github.com/dialogs/dialog-web-platform/commit/${GITHUB_SHA}/checks)\"}" \
          ${{ secrets.DIALOG_WEBHOOK }}
