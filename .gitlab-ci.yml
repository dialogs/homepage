services:
  - docker:dind

variables:
  GIT_SSH_COMMAND: 'ssh -o StrictHostKeyChecking=no'
  GIT_STRATEGY: clone
  IMAGE_NAME: dlgim/$CI_PROJECT_NAME
  BUILD_NUMBER: '${CI_PIPELINE_IID}'

cache:
  key: '${CI_COMMIT_SHA}'
  paths:
    - ./node_modules
    - ./src
    - ./public

stages:
  - version
  - build
  - docker
  - deploy
  - notify

version:
  image: gitlab.transmit.im:5001/gitlab/builders/web-builder:latest
  stage: version
  script:
    - version=$(node -p "require('./package.json').version")
    - image_version="$version.${BUILD_NUMBER}"
    - echo $image_version
    - echo "export IMAGE_VERSION=$image_version" > variables
  artifacts:
    paths:
      - variables

build:
  image: gitlab.transmit.im:5001/gitlab/builders/web-builder:latest
  stage: build
  script:
    - source variables
    - |
      curl --header 'Content-Type: application/json' --request POST \
      --data "{\"text\": \"👉🏾 Homepage:${IMAGE_VERSION} build started. [More info](${CI_PIPELINE_URL})\"}" \
      $DIALOG_HOOK_URL
    - npm ci
    - npm run build
    - |
      curl --header 'Content-Type: application/json' --request POST \
      --data "{\"text\": \"👌🏾 Homepage:${IMAGE_VERSION} build finished. [More info](${CI_PIPELINE_URL})\"}" \
      $DIALOG_HOOK_URL
  dependencies:
    - version

docker build:
  stage: docker
  script:
    - source variables
    - |
      curl --header 'Content-Type: application/json' --request POST \
      --data "{\"text\": \"👉🏾 Homepage:${IMAGE_VERSION} docker image build started. [More info](${CI_PIPELINE_URL})\"}" \
      $DIALOG_HOOK_URL
    - docker login -u="${REGISTRY_USER}" -p="${REGISTRY_PASSWORD}" "${REGISTRY}"
    - docker build -t "${REGISTRY}"/"${IMAGE_NAME}":"${IMAGE_VERSION}" .
    - docker tag "${REGISTRY}"/"${IMAGE_NAME}":"${IMAGE_VERSION}" "${REGISTRY}"/"${IMAGE_NAME}":latest
    - docker push "${REGISTRY}"/"${IMAGE_NAME}":"${IMAGE_VERSION}"
    - if [ "${CI_COMMIT_REF_NAME}" = "master" ]; then docker push "${REGISTRY}"/"${IMAGE_NAME}":latest; fi
    - |
      curl --header 'Content-Type: application/json' --request POST \
      --data "{\"text\": \"👌🏾 Homepage:${IMAGE_VERSION}: docker image build finished. [More info](${CI_PIPELINE_URL})\"}" \
      $DIALOG_HOOK_URL
  dependencies:
    - version
    - build

staging:
  stage: deploy
  environment:
    name: staging
    url: https://new-landing.dlg.im
  cache: {}
  image: gitlab.transmit.im:5001/gitlab/builders/ansible
  script:
    - source variables
    - |
      curl --header 'Content-Type: application/json' --request POST \
      --data "{\"text\": \"👉🏾 Homepage:${IMAGE_VERSION} deploy to staging started. [More info](${CI_PIPELINE_URL})\"}" \
      $DIALOG_HOOK_URL
    - eval `ssh-agent`
    - echo "$SSH_CI_KEY" | base64 -d | ssh-add -
    - git clone git@gitlab.transmit.im:web/ansible-playbooks/homepage.git
    - cd homepage && ansible-galaxy install -r requirements.yml
    - ansible-playbook -u poweruser playbook.yml --diff -e homepage_service_name="${CI_PROJECT_NAME}" -e homepage_container="${REGISTRY}/${IMAGE_NAME}:${IMAGE_VERSION}"
    - |
      curl --header 'Content-Type: application/json' --request POST \
      --data "{\"text\": \"🤟🏾 Homepage:${IMAGE_VERSION} deploy successfuly. [More info](${CI_PIPELINE_URL})\"}" \
      $DIALOG_HOOK_URL
  dependencies:
    - version
  only:
    - develop

notify_build_fail:
  stage: docker
  when: on_failure
  script:
    - |
      curl --header 'Content-Type: application/json' --request POST \
      --data "{\"text": \"🖕🏾 Homepage:${IMAGE_VERSION} build failed. [More info](${CI_PIPELINE_URL})\"}" \
      $DIALOG_HOOK_URL

notify_docker_fail:
  stage: deploy
  when: on_failure
  script:
    - |
      curl --header 'Content-Type: application/json' --request POST \
      --data "{\"text\": \"🖕🏾 Homepage:${IMAGE_VERSION} docker image build failed. [More info](${CI_PIPELINE_URL})\"}" \
      $DIALOG_HOOK_URL

notify_staging_fail:
  stage: notify
  when: on_failure
  script:
    - |
      curl --header 'Content-Type: application/json' --request POST \
      --data "{\"text\": \"🖕🏾 Homepage:${IMAGE_VERSION} deploy failed. [More info](${CI_PIPELINE_URL})\"}" \
      $DIALOG_HOOK_URL
